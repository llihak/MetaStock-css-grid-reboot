$bp-md: 600px;  
$bp-lg: 900px;

.grid {

  display: flex; // for fallback ??
  flex-wrap: wrap;
  
  display: grid;
  // grid-template-columns: var(--gtc, repeat(12, [col] 1fr));
  grid-gap: var(--gg, 1rem);

  // this does not account for md and smaller though ??? 
  // &.golden {
  //   grid-template-columns: 1.61803399fr 1fr;
  // }
  // &.golden-r {
  //   grid-template-columns: 1fr 1.61803399fr;
  // }
}



.grid > * {
  flex: 1 1 var(--gtcx, 320px);
  grid-column-end: var(--gce, span 1);
  grid-row-end: var(--gre, span 1);
}
.grid > .full,
.grid > h1,
.grid > h2,
.grid > h3,
.grid > h4,
.grid > h5,
.grid > h6 {
  flex: 0 0 100%;
  grid-column: 1/-1;
}

@media (max-width: $bp-md) {
  .grid {
    grid-template-columns: var(--gtcs, 1fr);
    & > * {
      grid-column: var(--gcm, auto);
      grid-column-end: span var(--sm, 1);
      grid-row: var(--grm, auto);
      // flex: var(--sm, 1);

    }
  }
}

@media (min-width: $bp-md) {
  body { background-color: aliceblue; }
  .grid {
    grid-template-columns: var(--gtc-md, repeat(var(--md-cols, 2), [col] 1fr));
    & > * {
      grid-column: var(--gcm, auto);
      grid-column-end: span var(--md-span, 1);
      
      grid-row:  var(--grm, auto);
    }
    
    --golden: 1.618fr;
    &.golden-md {
      grid-template-columns: var(--golden) 1fr;
    }
    &.golden-md-r {
      grid-template-columns: 1fr var(--golden);
    }
  }
}

@media (min-width: $bp-lg) {
  body { background-color: linen; }
  .grid {
    // should the default be 3 columns or 12 ????
    grid-template-columns: var(--gtcl, repeat(var(--lg-cols,var(--md-cols)), [col] 1fr));
    & > * {
      grid-column: var(--gcl, auto);
      grid-column-end: span var(--lg-span, var(--md-span)); 

      grid-row: var(--grl, auto);
      flex: var(--lg-span, 1);
    }

    &.golden-lg {
      grid-template-columns: var(--golden) 1fr;
    }
    &.golden-lg-r {
      grid-template-columns: 1fr var(--golden);
    }
  }
}


.wtw {
  line-height: 9.999999999;
}
